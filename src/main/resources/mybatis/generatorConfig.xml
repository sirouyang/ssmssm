<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration >
	<!-- <classPathEntry location="C:\Users\leixu\.m2\repository\com\oracle\ojdbc6\11.2.0.3\ojdbc6-11.2.0.3.jar" /> --> 
	<classPathEntry location="E:\Projects\IDE\Maven\repo-im\org\postgresql\postgresql\9.4-1206-jdbc41\postgresql-9.4-1206-jdbc41.jar" />
	<context id="context1" defaultModelType="hierarchical">
		<!-- 当表名或者字段名为SQL关键字的时候，可以设置该属性为true，MBG会自动给表名或字段名添加**分隔符** -->
		<property name="autoDelimitKeywords" value="true"/>
		<!-- 这里引入扩展插件 -->
		<plugin type="org.mybatis.generator.plugins.ToStringPlugin" ></plugin>
		<plugin type="org.mybatis.generator.plugins.CaseInsensitiveLikePlugin"></plugin>
		<plugin type="org.mybatis.generator.plugins.SerializablePlugin"></plugin>
		<plugin type="org.mybatis.generator.plugins.PostgreSQLPaginationPlugin" ></plugin>
		<plugin type="org.mybatis.generator.plugins.RenameExampleClassPlugin" >
			<property name="searchString" value="Example$" />
			<property name="replaceString" value="Criteria" />
		</plugin>
		<!-- 在Mysql中不能这么写，所以还要将这两个默认值改为**反单引号(`)** -->
		<!-- <property name="beginningDelimiter" value="`"/>
			<property name="endingDelimiter" value="`"/> -->
		<commentGenerator>  
			<!-- 注释信息-->
			<property name="suppressAllComments" value="false"/>
			<property name="suppressDate" value="true"/>
		</commentGenerator> 
		<!-- <jdbcConnection driverClass="oracle.jdbc.driver.OracleDriver" connectionURL="jdbc:oracle:thin:@192.168.129.130:1521:orcl" userId="barch" password="barch" /> -->
		<jdbcConnection driverClass="org.postgresql.Driver" connectionURL="jdbc:postgresql://192.10.11.37:5432/postgres" userId="postgres" password="system" />
		<!-- 如果精度>0或者长度>18，就会使用java.math.BigDecimal -->
		<!-- 如果精度=0并且10<=长度<=18，就会使用java.lang.Long -->
		<!-- 如果精度=0并且5<=长度<=9，就会使用java.lang.Integer -->
		<!-- 如果精度=0并且长度<5，就会使用java.lang.Short -->
		<javaTypeResolver >  
			<property name="forceBigDecimals" value="false" />  
		</javaTypeResolver>  
		<!-- javabeen生成的地方 -->
		<javaModelGenerator targetPackage="com.ssmssm.entity.system" targetProject="ssmssm" >
			<property name="enableSubPackages" value="true" />  
			<property name="trimStrings" value="true" />
			<property name="rootClass" value="com.ssmssm.entity.core.BaseEntity"/>
		</javaModelGenerator>
		<!-- mapxml生成的地方 -->
		<sqlMapGenerator targetPackage="com.ssmssm.dao.system" targetProject="ssmssm" >
			<property name="enableSubPackages" value="false" />
		</sqlMapGenerator>
		<!-- mapxml对应client，也就是接口dao -->
		<!-- type:ANNOTATEDMAPPER:基于注解的Mapper接口，不会有对应的XML映射文件 -->
		<!-- type:MIXEDMAPPER:XML和注解的混合形式，(上面这种情况中的)SqlProvider注解方法会被XML替代 -->
		<!-- type:XMLMAPPER:所有的方法都在XML中，接口调用依赖XML文件 -->
		<javaClientGenerator type="XMLMAPPER" targetPackage="com.ssmssm.dao.system" targetProject="ssmssm"> 
			<property name="enableSubPackages" value="true" /> 
		</javaClientGenerator>
		<table schema="" tableName="T_AUTH_RESOURCE" domainObjectName="Resource" >
			<generatedKey column="ID" sqlStatement="select replace(uuid_generate_v4()::VARCHAR, '-', '')"/>
		</table>
		<table schema="" tableName="T_AUTH_ROLE" domainObjectName="Role" >
			<generatedKey column="ID" sqlStatement="select replace(uuid_generate_v4()::VARCHAR, '-', '')"/>
		</table>
		<table schema="" tableName="T_AUTH_ROLE_RESOURCE" domainObjectName="RoleResource" >
			<generatedKey column="ID" sqlStatement="select replace(uuid_generate_v4()::VARCHAR, '-', '')"/>
		</table>
		<table schema="" tableName="T_AUTH_USER" domainObjectName="User" >
			<generatedKey column="ID" sqlStatement="select replace(uuid_generate_v4()::VARCHAR, '-', '')"/>
		</table>
		<table schema="" tableName="T_AUTH_USER_ROLE" domainObjectName="UserRole" >
			<generatedKey column="ID" sqlStatement="select replace(uuid_generate_v4()::VARCHAR, '-', '')"/>
		</table>
		<table schema="" tableName="T_SYS_BLOB_FILE" domainObjectName="BolbFile" >
			<generatedKey column="ID" sqlStatement="select replace(uuid_generate_v4()::VARCHAR, '-', '')"/>
		</table>
		<table schema="" tableName="T_SYS_BUSINESS_LOGS" domainObjectName="BusinessLogs" >
			<generatedKey column="ID" sqlStatement="select replace(uuid_generate_v4()::VARCHAR, '-', '')"/>
		</table>
		<table schema="" tableName="T_SYS_COMMON_CODE" domainObjectName="CommonCode" >
			<generatedKey column="ID" sqlStatement="select replace(uuid_generate_v4()::VARCHAR, '-', '')"/>
		</table>
	</context>
</generatorConfiguration>