<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven/>
	<!-- <annotation-driven conversion-service="conversionService" enable-matrix-variables="true"> 
		<argument-resolvers> <beans:bean class="org.springframework.samples.mvc.data.custom.CustomArgumentResolver"/> 
		</argument-resolvers> <async-support default-timeout="3000"> <callable-interceptors> 
		<beans:bean class="org.springframework.samples.mvc.async.TimeoutCallableProcessingInterceptor" 
		/> </callable-interceptors> </async-support> </annotation-driven> -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources/ directory -->
	<resources mapping="/WEB-INF/views/**" location="/WEB-INF/views/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- Only needed because we install custom converters to support the examples 
		in the org.springframewok.samples.mvc.convert package -->
	<!-- 	<beans:bean id="conversionService"
			class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
			<beans:property name="formatters">
				<beans:bean
					class="org.springframework.samples.mvc.convert.MaskFormatAnnotationFormatterFactory" />
			</beans:property>
		</beans:bean> -->

	<!-- Only needed because we require fileupload in the org.springframework.samples.mvc.fileupload 
		package -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<!-- Imports user-defined @Controller beans that process client requests -->
	<beans:import resource="controllers.xml" />

	<task:annotation-driven />
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<beans:bean class="com.ssmssm.core.logger.LoggerInterceptor" >
				<!--isLogger 是否产生Logger-->
				<beans:property name="isLogger">
					<beans:value>true</beans:value>
				</beans:property>
				<beans:property name="isShowErrors">
					<beans:value>true</beans:value>
				</beans:property>
			</beans:bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<mvc:resources mapping="/res/**" location="/WEB-INF/res/"/>      
	<mvc:default-servlet-handler />
	
	<!-- 全局异常配置 start -->
	<beans:bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<beans:property name="exceptionMappings">
			<beans:props>
				<beans:prop key="java.lang.Exception">errors/error</beans:prop>
				<beans:prop key="java.lang.Throwable">errors/err</beans:prop>
			</beans:props>
		</beans:property>
		<beans:property name="statusCodes">
			<beans:props>
				<beans:prop key="errors/error">500</beans:prop>
				<beans:prop key="errors/404">404</beans:prop>
			</beans:props>
		</beans:property>
		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
		<beans:property name="warnLogCategory" value="WARN"></beans:property>
		<!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->
		<beans:property name="defaultErrorView" value="errors/error"></beans:property>
		<!-- 默认HTTP状态码 -->
		<beans:property name="defaultStatusCode" value="500"></beans:property>
	</beans:bean>
	<!-- 全局异常配置 end -->

</beans:beans>
